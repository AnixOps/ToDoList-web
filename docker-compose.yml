services:
  # 后端 API 服务
  todolist-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"
    volumes:
      - todolist_data:/app/data
      - ./backend/config/config.yaml:/app/config/config.yaml:ro
    environment:
      - GIN_MODE=release
    restart: unless-stopped
    networks:
      todolist-network:
        aliases:
          - backend
          - api
          - todolist-api

  # 前端开发服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8080/api/v1
    restart: unless-stopped
    networks:
      - todolist-network
    depends_on:
      - todolist-backend

  # PostgreSQL数据库 (可选)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: todolist
      POSTGRES_USER: todolist
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - todolist-network
    profiles:
      - postgres

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - todolist-app
    restart: unless-stopped
    networks:
      - todolist-network
    profiles:
      - nginx

volumes:
  todolist_data:
  postgres_data:

networks:
  todolist-network:
    driver: bridge