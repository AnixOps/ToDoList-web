# 后端专用 Dockerfile

# 阶段1: 构建Go后端
FROM golang:1.21-bullseye AS backend-builder

WORKDIR /app/backend

# 更新包管理器并安装必要依赖
RUN apt-get update && apt-get install -y \
    gcc \
    libc6-dev \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# 复制go模块文件
COPY go.mod go.sum ./
RUN go mod download

# 复制源代码
COPY . ./

# 构建应用
RUN CGO_ENABLED=1 GOOS=linux go build -a -o main .

# 阶段2: 最终镜像
FROM debian:bullseye-slim

WORKDIR /app

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    ca-certificates \
    sqlite3 \
    libsqlite3-0 \
    && rm -rf /var/lib/apt/lists/*

# 创建非root用户
RUN groupadd -g 1001 todolist && \
    useradd -r -u 1001 -g todolist todolist

# 创建数据目录
RUN mkdir -p /app/data && \
    chown -R todolist:todolist /app

# 从构建阶段复制文件
COPY --from=backend-builder /app/backend/main /app/
COPY --from=backend-builder /app/backend/config/config.yaml /app/config/

# 切换到非root用户
USER todolist

# 暴露端口
EXPOSE 8080

# 设置环境变量
ENV GIN_MODE=release

# 运行应用
CMD ["./main"]