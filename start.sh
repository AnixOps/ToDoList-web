#!/bin/bash

# ToDoList È°πÁõÆÂêØÂä®ËÑöÊú¨
# ToDoList Project Startup Script

echo "üöÄ Starting ToDoList Application..."
echo "ÂêØÂä® ToDoList Â∫îÁî®..."

# Ê£ÄÊü•ÊòØÂê¶Âú®È°πÁõÆÊ†πÁõÆÂΩï
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå Error: Please run this script from the project root directory"
    echo "ÈîôËØØÔºöËØ∑Âú®È°πÁõÆÊ†πÁõÆÂΩïËøêË°åÊ≠§ËÑöÊú¨"
    exit 1
fi

# ÂáΩÊï∞ÔºöÂêØÂä®ÂêéÁ´ØÊúçÂä°
start_backend() {
    echo "üì¶ Starting Backend Service..."
    echo "ÂêØÂä®ÂêéÁ´ØÊúçÂä°..."
    
    cd backend
    if [ ! -f "go.mod" ]; then
        echo "‚ùå Backend go.mod not found"
        exit 1
    fi
    
    # ‰∏ãËΩΩ‰æùËµñ
    go mod download
    
    # ÂêØÂä®ÂêéÁ´Ø
    echo "üîß Starting Go backend on port 8080..."
    go run main.go &
    BACKEND_PID=$!
    echo "Backend PID: $BACKEND_PID"
    cd ..
}

# ÂáΩÊï∞ÔºöÂêØÂä®ÂâçÁ´ØÊúçÂä°
start_frontend() {
    echo "üé® Starting Frontend Service..."
    echo "ÂêØÂä®ÂâçÁ´ØÊúçÂä°..."
    
    cd frontend
    if [ ! -f "package.json" ]; then
        echo "‚ùå Frontend package.json not found"
        exit 1
    fi
    
    # ÂÆâË£Ö‰æùËµñÔºàÂ¶ÇÊûúÈúÄË¶ÅÔºâ
    if [ ! -d "node_modules" ]; then
        echo "üì¶ Installing npm dependencies..."
        npm install
    fi
    
    # ÂêØÂä®ÂâçÁ´Ø
    echo "üîß Starting Vue frontend on port 3000..."
    npm run dev &
    FRONTEND_PID=$!
    echo "Frontend PID: $FRONTEND_PID"
    cd ..
}

# ÂáΩÊï∞Ôºö‰ΩøÁî®DockerÂêØÂä®
start_docker() {
    echo "üê≥ Starting with Docker..."
    echo "‰ΩøÁî® Docker ÂêØÂä®..."
    
    # ÊûÑÂª∫Âπ∂ÂêØÂä®
    docker-compose up --build -d
    
    echo "‚úÖ Services started with Docker"
    echo "Docker ÊúçÂä°ÂêØÂä®ÊàêÂäü"
    echo "üì± Frontend: http://localhost:8080"
    echo "üîß Backend API: http://localhost:8080/api/v1"
}

# ÂáΩÊï∞ÔºöÊòæÁ§∫Â∏ÆÂä©
show_help() {
    echo "ToDoList Project Startup Script"
    echo ""
    echo "Usage: $0 [option]"
    echo ""
    echo "Options:"
    echo "  dev     - Start in development mode (default)"
    echo "  docker  - Start with Docker Compose"
    echo "  help    - Show this help message"
    echo ""
    echo "Development mode starts:"
    echo "  - Backend on port 8080"
    echo "  - Frontend on port 3000"
    echo ""
    echo "Docker mode starts:"
    echo "  - Complete application on port 8080"
}

# ‰∏ªÈÄªËæë
case "${1:-dev}" in
    "dev")
        echo "üîß Starting in Development Mode..."
        echo "ÂºÄÂèëÊ®°ÂºèÂêØÂä®..."
        
        # ÂêØÂä®ÂêéÁ´Ø
        start_backend
        sleep 3
        
        # ÂêØÂä®ÂâçÁ´Ø
        start_frontend
        sleep 3
        
        echo ""
        echo "‚úÖ Services started successfully!"
        echo "ÊúçÂä°ÂêØÂä®ÊàêÂäüÔºÅ"
        echo ""
        echo "üì± Frontend: http://localhost:3000"
        echo "üîß Backend:  http://localhost:8080"
        echo "üíö Health:   http://localhost:8080/api/v1/health"
        echo ""
        echo "Press Ctrl+C to stop all services"
        echo "Êåâ Ctrl+C ÂÅúÊ≠¢ÊâÄÊúâÊúçÂä°"
        
        # Á≠âÂæÖÁî®Êà∑‰∏≠Êñ≠
        trap 'echo ""; echo "üõë Stopping services..."; kill $BACKEND_PID $FRONTEND_PID 2>/dev/null; exit 0' INT
        wait
        ;;
    "docker")
        start_docker
        ;;
    "help"|"-h"|"--help")
        show_help
        ;;
    *)
        echo "‚ùå Unknown option: $1"
        show_help
        exit 1
        ;;
esac