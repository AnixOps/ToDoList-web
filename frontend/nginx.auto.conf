server {
    listen 80;
    server_name localhost;
    
    # 静态文件
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
    
    # API代理到后端 - 使用网络别名自动发现
    location /api/ {
        # 设置resolver以支持动态解析
        resolver 127.0.0.11 valid=30s;
        
        # 尝试多个后端别名，按优先级排序
        set $backend_host "";
        
        # 检查是否存在各种可能的后端服务名
        if ($backend_host = "") {
            set $backend_host "backend:8080";
        }
        
        proxy_pass http://$backend_host;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 连接超时设置
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # 如果后端不可用，使用备用处理
        error_page 502 503 504 = @try_alternative_backends;
    }
    
    # 备用后端尝试
    location @try_alternative_backends {
        resolver 127.0.0.11 valid=30s;
        
        # 尝试其他可能的后端别名
        set $alt_backend "api:8080";
        proxy_pass http://$alt_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 3s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # 最终失败处理
        error_page 502 503 504 = @backend_unavailable;
    }
    
    # 后端完全不可用时的处理
    location @backend_unavailable {
        add_header Content-Type application/json;
        return 502 '{"error": "Backend service unavailable", "message": "All backend services are currently unavailable. Please ensure the backend is running and accessible.", "available_endpoints": ["backend:8080", "api:8080", "todolist-api:8080"]}';
    }
    
    # 健康检查
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 后端健康检查代理
    location /api-health {
        resolver 127.0.0.11 valid=30s;
        set $backend_host "backend:8080";
        proxy_pass http://$backend_host/health;
        proxy_connect_timeout 3s;
        proxy_send_timeout 3s;
        proxy_read_timeout 3s;
    }
}